<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.module.pdu.dal.mysql.pdudevice.PduIndexMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->

    <select id="getPDUDeviceCount"
            resultType="cn.iocoder.yudao.module.pdu.controller.admin.pdudevice.vo.PduDeviceCountResVO">
        select
        sum(case when run_status = 0 then 1 else 0 end) as normal,
        sum(case when run_status = 5 then 1 else 0 end) as offline,
        sum(case when run_status = 2 then 1 else 0 end) as alarm,
        sum(case when run_status = 1 then 1 else 0 end) as warn
        from pdu_index
        <where>
            is_deleted =0
        </where>
    </select>
    <select id="getBalancedDistribution"
            resultType="cn.iocoder.yudao.module.pdu.controller.admin.pdudevice.vo.BalancedDistributionStatisticsVO">
        select
        sum(case when cur_unbalance_status = 1 then 1 else 0 end) as smallCurrent,
        sum(case when cur_unbalance_status = 2 then 1 else 0 end) as lessFifteen,
        sum(case when cur_unbalance_status = 3 then 1 else 0 end) as greaterFifteen,
        sum(case when cur_unbalance_status = 4 then 1 else 0 end) as greaterThirty
        from pdu_index
        <where>
            is_deleted =0 and run_status !=5
        </where>
    </select>
    <!--order by case when run_status=2 then 1 else 0 end desc-->
    <select id="selectQuery" resultType="cn.iocoder.yudao.module.pdu.dal.mysql.pdudevice.PduIndex">
        SELECT
        id,pdu_key pduKey,ip_addr ipAddr,cascade_id cascadeId,
        node_id nodeId,is_deleted isDeleted,run_status runStatus,
        create_time createTime,update_time updateTime,cur_unbalance_status curUnbalanceStatus
        FROM pdu_index
        <where>
            <if test="pduVo.pduKeyList !=null and pduVo.pduKeyList.size>0">
               and pdu_key IN
                <foreach item="item" collection="pduVo.pduKeyList" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="pduVo.devKey != null and pduVo.devKey != ''">
                and pdu_key = #{pduVo.devKey}
            </if>
            <if test="pduVo.status != null and pduVo.status.size >0">
                and run_status in
                <foreach item="item" collection="pduVo.status" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="pduVo.color !=null and pduVo.color.size >0">
                and cur_unbalance_status in
                <foreach item="item" collection="pduVo.color" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            and is_deleted =0
        </where>
        ORDER BY CASE WHEN run_status =4 THEN 0 ELSE 1 END, create_time asc
    </select>

    <select id="selectCurbanceQuery" resultType="cn.iocoder.yudao.module.pdu.dal.mysql.pdudevice.PduIndex">
        SELECT
        id,pdu_key pduKey,ip_addr ipAddr,cascade_id cascadeId,
        node_id nodeId,is_deleted isDeleted,run_status runStatus,
        create_time createTime,update_time updateTime,cur_unbalance_status curUnbalanceStatus
        FROM pdu_index
        <where>
            <if test="pduVo.pduKeyList !=null and pduVo.pduKeyList.size>0">
                and pdu_key IN
                <foreach item="item" collection="pduVo.pduKeyList" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="pduVo.devKey != null and pduVo.devKey != ''">
                and pdu_key = #{pduVo.devKey}
            </if>
            <if test="pduVo.status != null and pduVo.status.size >0">
                and run_status in
                <foreach item="item" collection="pduVo.status" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="pduVo.color !=null and pduVo.color.size >0">
                and cur_unbalance_status in
                <foreach item="item" collection="pduVo.color" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            and is_deleted =0 and run_status !=5
        </where>
        ORDER BY CASE WHEN run_status =4 THEN 0 ELSE 1 END, create_time asc
    </select>
</mapper>
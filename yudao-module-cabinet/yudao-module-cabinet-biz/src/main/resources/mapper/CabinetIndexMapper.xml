<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.framework.common.mapper.CabinetIndexMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->

    <select id="selectCabineIndexCfgById" resultType="cn.iocoder.yudao.framework.common.vo.CabineIndexCfgVO">
        SELECT
        ci.id,
        ci.room_id,
        ci.aisle_id,
        ci.aisle_x,
        ci.cabinet_type,
        ci.cabinet_name,
        ci.cabinet_height,
        ci.power_capacity,
        ci.is_disabled,
        ci.run_status,
        ci.load_status,
        ci.pdu_box,
        ci.is_deleted,
        ci.create_time,
        ci.update_time,
        cfg.ele_alarm_day,
        cfg.ele_limit_day,
        cfg.ele_alarm_month,
        cfg.ele_limit_month,
        cfg.x_coordinate,
        cfg.y_coordinate,
        cfg.company
        FROM
        cabinet_index ci
        LEFT JOIN cabinet_cfg cfg on cfg.cabinet_id = ci.id
        WHERE ci.id = #{id}
    </select>
    <select id="selectIndexLoadPage"
            resultType="cn.iocoder.yudao.framework.common.vo.CabineIndexCfgVO">
        SELECT
        ci.id,
        ci.room_id,
        ci.aisle_id,
        ci.aisle_x,
        ci.cabinet_type,
        ci.cabinet_name,
        ci.cabinet_height,
        ci.power_capacity,
        ci.is_disabled,
        ci.run_status,
        ci.load_status,
        ci.pdu_box,
        ci.is_deleted,
        ci.create_time,
        ci.update_time,
        cfg.ele_alarm_day,
        cfg.ele_limit_day,
        cfg.ele_alarm_month,
        cfg.ele_limit_month,
        cfg.x_coordinate,
        cfg.y_coordinate,
        cfg.company,
        ri.room_name as roomName
        FROM
        cabinet_index ci
        LEFT JOIN cabinet_cfg cfg on cfg.cabinet_id = ci.id
        LEFT JOIN room_index ri on ri.id = ci.room_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0
            <if test="req.cabinetIds !=null and req.cabinetIds.size >0">
                and ci.id in
                <foreach item="item" collection="req.cabinetIds" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="req.roomId !=null and req.roomId !=''">
                and ci.room_id = #{req.roomId}
            </if>
            <if test="req.runStatus !=null and req.runStatus.size >0">
                and ci.run_status in
                <foreach item="item" collection="req.runStatus" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="req.loadStatus !=null and req.loadStatus.size >0">
                and ci.load_status in
                <foreach item="item" collection="req.loadStatus" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="req.switchValue !=1 and  req.startNum !=null and req.startNum != ''">
                and coldmax_tem between #{req.startNum} and #{req.endNum}
            </if>
            <if test="req.switchValue ==1 and  req.startNum !=null and req.startNum != ''">
                and heatmax_tem between #{req.startNum} and #{req.endNum}
            </if>
            <if test="req.pduBox !=null">
                and ci.pdu_box = #{req.pduBox}
            </if>
            <if test="req.company !=null">
                and cfg.company like concat('%',#{req.company},'%')
            </if>
        </where>
        order by ci.create_time desc
    </select>
    <select id="selectLoadStatusCount" resultType="java.util.Map">
        SELECT
        sum(case when ci.load_status = 0 then 1 else 0 end) as LoadRateZero,
        sum(case when ci.load_status = 1 then 1 else 0 end) as lessThirty,
        sum(case when ci.load_status = 2 then 1 else 0 end) as greaterThirty,
        sum(case when ci.load_status = 3 then 1 else 0 end) as greaterSixty,
        sum(case when ci.load_status = 4 then 1 else 0 end) as greaterNinety,
        count(id) as total
        FROM cabinet_index ci
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0
        </where>
    </select>
    <select id="getCapacitystatistics"
            resultType="cn.iocoder.yudao.framework.common.vo.CabinetCapacityStatisticsResVO">
        select
        count(id) as total,
        SUM(case when round(100-(cabinet_use_height/cabinet_height)*100,2) BETWEEN 0 and 29.99 then 1 else 0 end) as
        thirty,
        SUM(case when round(100-(cabinet_use_height/cabinet_height)*100,2) BETWEEN 30 and 49.99 then 1 else 0 end) as
        fifty,
        SUM(case when round(100-(cabinet_use_height/cabinet_height)*100,2) BETWEEN 50 and 99.99 then 1 else 0 end) as
        ninetyNine,
        SUM(case when round(100-(cabinet_use_height/cabinet_height)*100,2) BETWEEN 100 and 100 then 1 else 0 end) as
        oneHundred
        from cabinet_index
        where is_disabled = 0 and is_deleted = 0
    </select>
    <select id="selectListAndPdu" resultType="cn.iocoder.yudao.framework.common.vo.CabinetPduResVO">
        select
        cp.id,
        cp.cabinet_id as cabinetId,
        cp.pdu_key_a as pduKeyA,
        cp.pdu_key_b as pduKeyB,
        ci.cabinet_name as cabinetName,
        ci.room_id as roomId,
        ci.aisle_id as aisleId
        from cabinet_index ci left join cabinet_pdu cp on ci.id = cp.cabinet_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0 and ci.pdu_box = 0 and (cp.pdu_key_a is not null or cp.pdu_key_b is
            not null)
        </where>
    </select>
    <select id="selectCabinetBox" resultType="cn.iocoder.yudao.framework.common.vo.CabinetIndexBoxResVO">
        select
        ci.id as id,
        ci.room_id as roomId,
        ci.cabinet_name as cabinetName,
        ci.pdu_box as pduBox,
        cb.box_key_a as boxKeyA,
        cb.box_key_b as boxKeyB
        from cabinet_index ci
        left join cabinet_box cb on ci.id = cb.cabinet_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0 and ci.pdu_box = 1
        </where>
    </select>
    <select id="selectCabinetEnvPage"
            resultType="cn.iocoder.yudao.framework.common.entity.mysql.cabinet.CabinetCfg">
        SELECT
        ci.id,
        ci.room_id,
        ci.aisle_id,
        ci.aisle_x,
        ci.cabinet_type,
        ci.cabinet_name,
        ci.cabinet_height,
        ci.power_capacity,
        ci.is_disabled,
        ci.run_status,
        ci.load_status,
        ci.pdu_box,
        ci.is_deleted,
        ci.create_time,
        ci.update_time,
        cfg.ele_alarm_day,
        cfg.ele_limit_day,
        cfg.ele_alarm_month,
        cfg.ele_limit_month,
        cfg.x_coordinate,
        cfg.y_coordinate,
        cfg.company,
        ri.room_name as roomName
        FROM
        cabinet_index ci
        LEFT JOIN cabinet_cfg cfg on cfg.cabinet_id = ci.id
        LEFT JOIN room_index ri on ri.id = ci.room_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0
            <if test="req.cabinetIds !=null and req.cabinetIds.size >0">
                and ci.id in
                <foreach item="item" collection="req.cabinetIds" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="req.roomId !=null and req.roomId !=''">
                and ci.room_id = #{req.roomId}
            </if>
            <if test="req.runStatus !=null and req.runStatus.size >0">
                and ci.run_status in
                <foreach item="item" collection="req.runStatus" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="req.loadStatus !=null and req.loadStatus.size >0">
                and ci.load_status in
                <foreach item="item" collection="req.loadStatus" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="req.pduBox !=null">
                and ci.pdu_box = #{req.pduBox}
            </if>
            <if test="req.company !=null">
                and cfg.company like concat('%',#{req.company},'%')
            </if>
        </where>
        order by ci.create_time desc
    </select>
    <select id="selectCabineIndexCfgByAisleId"
            resultType="cn.iocoder.yudao.framework.common.vo.CabineIndexCfgVO">
        SELECT
        ci.id,
        ci.room_id,
        ci.aisle_id,
        ci.aisle_x,
        ci.cabinet_type,
        ci.cabinet_name,
        ci.cabinet_height,
        ci.power_capacity,
        ci.is_disabled,
        ci.run_status,
        ci.load_status,
        ci.pdu_box,
        ci.cabinet_use_height,
        ci.is_deleted,
        ci.create_time,
        ci.update_time,
        cfg.ele_alarm_day,
        cfg.ele_limit_day,
        cfg.ele_alarm_month,
        cfg.ele_limit_month,
        cfg.x_coordinate,
        cfg.y_coordinate,
        cfg.company
        FROM
        cabinet_index ci
        LEFT JOIN cabinet_cfg cfg on cfg.cabinet_id = ci.id
        WHERE ci.aisle_id = #{aisleId} and ci.is_deleted = 0 and ci.is_disabled = 0
    </select>
    <select id="selectCabinetPduList" resultType="cn.iocoder.yudao.framework.common.vo.CabinetPduResVO">
        select
        cp.id,
        cp.cabinet_id as cabinetId,
        cp.pdu_key_a as pduKeyA,
        cp.pdu_key_b as pduKeyB,
        ci.cabinet_name as cabinetName,
        ci.room_id as roomId,
        ci.aisle_id as aisleId
        from cabinet_index ci left join cabinet_pdu cp on ci.id = cp.cabinet_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0 and ci.pdu_box = 0
            and (cp.pdu_key_a in
            <foreach item="item" collection="pduKey" separator="," open="(" close=")" index="">
                #{item}
            </foreach>
            or cp.pdu_key_b in
            <foreach item="item" collection="pduKey" separator="," open="(" close=")" index="">
                #{item}
            </foreach>)
        </where>
    </select>
    <select id="selectCabinetPduByPduKey" resultType="cn.iocoder.yudao.framework.common.vo.CabinetPduResVO">
        select
        cp.id,
        cp.cabinet_id as cabinetId,
        cp.pdu_key_a as pduKeyA,
        cp.pdu_key_b as pduKeyB,
        ci.cabinet_name as cabinetName,
        ci.room_id as roomId,
        ci.aisle_id as aisleId
        from cabinet_index ci left join cabinet_pdu cp on ci.id = cp.cabinet_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0 and ci.pdu_box = 0
            and (cp.pdu_key_a =#{pduKey} or cp.pdu_key_b =#{pduKey})
        </where>
    </select>
    <select id="deviceStatistics" resultType="cn.iocoder.yudao.framework.common.vo.DeviceStatisticsVO">
        SELECT
        sum(case when load_status = 0 then 1 else 0 end) as cabUnused,
        sum(case when load_status > 0 then 1 else 0 end) as cabUse,
        count(id) as cabNum
        FROM cabinet_index
        <where>
            is_deleted = 0 and is_disabled = 0 and room_id = #{roomId}
        </where>
    </select>
    <select id="getFindCabinetPduList"
            resultType="cn.iocoder.yudao.framework.common.entity.mysql.cabinet.CabinetPdu">
        select
        cp.cabinet_id,
        cp.create_time,
        cp.id,
        cp.pdu_key_a,
        cp.pdu_key_b,
        cp.update_time
        from cabinet_pdu cp left join cabinet_index ci on ci.id = cp.cabinet_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0 and ci.room_id = #{roomId}
        </where>
    </select>
    <select id="getFindCabinetBoxList"
            resultType="cn.iocoder.yudao.framework.common.entity.mysql.cabinet.CabinetPdu">
        select
        cb.box_index_a,
        cb.box_index_b,
        cb.box_key_a,
        cb.box_key_b,
        cb.cabinet_id,
        cb.create_time,
        cb.id,
        cb.outlet_id_a,
        cb.outlet_id_b,
        cb.update_time
        from cabinet_box cb left join cabinet_index ci on ci.id = cb.cabinet_id
        <where>
            ci.is_deleted = 0 and ci.is_disabled = 0 and ci.room_id = #{roomId}
        </where>
    </select>
    <select id="findAreaById" resultType="java.lang.Integer">
        select count(1) from cabinet_index ci
        left join cabinet_cfg cc on ci.id = cc.cabinet_id
        where
        room_id = #{roomId} and aisle_id = 0
        and (x_coordinate > #{xLength}
        or y_coordinate+1 > #{yLength})
    </select>
    <select id="selectByPduKey"  resultType="cn.iocoder.yudao.framework.common.entity.mysql.cabinet.CabinetIndex">
        SELECT
        *
        FROM
        cabinet_index ci
        LEFT JOIN cabinet_pdu cp ON ci.id = cp.cabinet_id
        <where>
            ci.is_deleted = 0
            AND cp.pdu_key_a = #{pduKey}
            OR cp.pdu_key_b = #{pduKey}
        </where>
    </select>

    <select id="findAddAisleVerifyx" resultType="java.lang.Integer">
        select count(1) from cabinet_index ci
        left join cabinet_cfg cc on ci.id = cc.cabinet_id
        <where>
            room_id = #{roomId} and aisle_id = 0 and is_deleted =0
            and  x_coordinate  between #{xCoordinate} and  #{xCoordinate}+#{aisleLength}
            and y_coordinate BETWEEN #{yCoordinate}  and #{yCoordinate}+1
        </where>
    </select>

    <select id="findAddAisleVerifyy" resultType="java.lang.Integer">
        select count(1) from cabinet_index ci
        left join cabinet_cfg cc on ci.id = cc.cabinet_id
        <where>
            room_id = #{roomId} and aisle_id = 0 and is_deleted =0
            and   y_coordinate between #{yCoordinate} and #{yCoordinate} + #{aisleLength}
            and x_coordinate BETWEEN #{xCoordinate}  and #{xCoordinate}+1
        </where>
    </select>
    <select id="findAisleCabinetByRoomId">
        select
    </select>
    <select id="selectLocationById" resultType="java.lang.String">
        SELECT
        CONCAT(r.room_name,"-",a.aisle_name,"-",c.cabinet_name)
        FROM
        `cabinet_index` c
        LEFT JOIN room_index r ON c.room_id = r.id
        LEFT JOIN aisle_index a ON c.aisle_id = a.id
        WHERE
        c.id = #{id}
    </select>
</mapper>
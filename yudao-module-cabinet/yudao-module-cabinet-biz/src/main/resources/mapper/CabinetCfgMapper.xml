<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.framework.common.mapper.CabinetCfgMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->

    <select id="selectCabList" parameterType="cn.iocoder.yudao.framework.common.dto.cabinet.CabinetIndexVo"
            resultType="cn.iocoder.yudao.framework.common.dto.cabinet.CabinetIndexDTO">
        select
        ci.id ,
        ci.room_id as roomId,
        ci.cabinet_name as name,
        ci.aisle_id as aisleId,
        ci.power_capacity as powCapacity,
        ci.pdu_box as pduBox,
        ci.run_status as runStatus,
        ci.load_status as loadStatus,
        ci.update_time as updateTime,
        ci.create_time as createTime,
        ci.cabinet_height as cabinetHeight,
        ci.cabinet_height as freeSpace,
        cf.x_coordinate as xCoordinate,
        cf.y_coordinate as yCoordinate,
        cf.company,
        100 - round((cabinet_use_height/cabinet_height)*100,2) as usedSpaceRate,
        ri.room_name as roomName,
        concat(ri.room_name,'-',ci.cabinet_name) as location
        from cabinet_index ci
        left join cabinet_cfg cf on ci.id = cf.cabinet_id
        left join room_index ri on ci.room_id = ri.id
        where ci.is_disabled = 0 and ci.is_deleted = 0
        <if test=" indexVo.pduBox != null ">
            and ci.pdu_box = #{indexVo.pduBox}
        </if>
        <if test=" indexVo.runStatus != null and indexVo.runStatus.size > 0">
            and ci.run_status in
            <foreach collection="indexVo.runStatus" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test=" indexVo.loadStatus != null and indexVo.loadStatus.size > 0">
            and ci.load_status in
            <foreach collection="indexVo.loadStatus" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test=" indexVo.cabinetIds != null and indexVo.cabinetIds.size > 0">
            and ci.id in
            <foreach collection="indexVo.cabinetIds" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test=" indexVo.roomId != null ">
            and ci.roomId = #{indexVo.roomId}
        </if>
        <if test=" indexVo.company != null and indexVo.company != ''">
            and cf.company like "%"#{indexVo.company}"%"
        </if>
        <if test="indexVo.startNum != null and  indexVo.endNum != null">
            and  round(100-(cabinet_use_height/cabinet_height)*100,2) BETWEEN #{indexVo.startNum} and #{indexVo.endNum}
        </if>
        order by ci.create_time desc,ci.run_status asc
    </select>


    <!-- 获得已删除机柜分页 -->
    <select id="selectCabdeleteList" parameterType="cn.iocoder.yudao.framework.common.dto.cabinet.CabinetIndexVo"
            resultType="cn.iocoder.yudao.framework.common.dto.cabinet.CabinetIndexDTO">
        select
        ci.id ,
        ri.room_name as roomname,
        ci.cabinet_name as name,
        ci.pdu_box as pduBox,
        ci.run_status as runStatus,
        ci.update_time as updateTime
        from cabinet_index ci
        left join room_index ri on ci.room_id = ri.id
        where ci.is_disabled = 0 and ci.is_deleted = 1
        ORDER BY ci.update_time desc
    </select>
    <select id="selectRunStatus" resultType="cn.iocoder.yudao.framework.common.vo.CabinetRunStatusResVO">
        select
        sum(case when run_status = 0 then 1 else 0 end) as Unbound,
        sum(case when run_status = 1 then 1 else 0 end) as Normal,
        sum(case when run_status = 2 then 1 else 0 end) as Warning,
        sum(case when run_status = 3 then 1 else 0 end) as Alarm,
        sum(case when run_status = 4 then 1 else 0 end) as Offline,
        count(id) as total
        from cabinet_index
        where is_disabled = 0 and is_deleted = 0
    </select>
    <select id="roomCabinetList" resultType="cn.iocoder.yudao.framework.common.dto.room.RoomCabinetDTO">
        select
        ci.id ,
        ci.room_id as roomId,
        ci.cabinet_name as cabinetName,
        ci.aisle_id as aisleId,
        ci.power_capacity as powCapacity,
        ci.pdu_box as pduBox,
        ci.cabinet_height as cabinetHeight,
        cf.x_coordinate as xCoordinate,
        cf.y_coordinate as yCoordinate,
        cf.ele_alarm_day as eleAlarmDay,
        cf.ele_limit_day as eleLimitDay,
        cf.ele_alarm_month as eleAlarmMonth,
        cf.ele_limit_month as eleLimitMonth,
        cf.company as company,
        ci.run_status as runStatus,
        ci.cabinet_use_height AS usedSpace,
        (ci.cabinet_height-ci.cabinet_use_height) as freeSpace
        from cabinet_index ci
        left join cabinet_cfg cf on ci.id = cf.cabinet_id
        <where> ci.is_disabled = 0 and ci.is_deleted = 0
            <if test="id !=null and id !=''">
                AND ci.room_id = #{id}
            </if>
            <choose>
                <when test="aisleIds !=null and aisleIds.size>0">
                    AND ci.aisle_id in
                    <foreach collection="aisleIds" item="item" index="index" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    AND ci.aisle_id = 0
                </otherwise>
            </choose>
        </where>
    </select>
    <select id="roomCabinetListByIds" resultType="cn.iocoder.yudao.framework.common.dto.room.RoomCabinetDTO">
        select
        ci.id ,
        ci.room_id as roomId,
        ci.cabinet_name as cabinetName,
        ci.aisle_id as aisleId,
        ci.power_capacity as powCapacity,
        ci.pdu_box as pduBox,
        ci.cabinet_height as cabinetHeight
        from cabinet_index ci
        <where> ci.is_disabled = 0 and ci.is_deleted = 0
            <if test="roomIds != null and roomIds.size >0">
                AND ci.room_id in
                <foreach collection="roomIds" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>


    <!-- 设备恢复 -->
    <update id="updaterestorerCabinet">
        update cabinet_index set is_deleted = 0 where id=#{id}
    </update>


    <update id="updateByCabinetCfg">
        update cabinet_cfg cg set cg.x_coordinate = #{vo.xCoordinate},cg.y_coordinate =
        #{vo.yCoordinate},cg.ele_alarm_day = #{vo.eleAlarmDay}, cg.ele_limit_day = #{vo.eleLimitDay}, cg.ele_alarm_month
        = #{vo.eleAlarmMonth}, cg.ele_limit_month = #{vo.eleLimitMonth}
        where cg.cabinet_id = #{vo.id}
    </update>
<!--    <update id="updateBatchByCabinetId">-->
<!--        <foreach collection="cabinetList" item="item" index="index"  separator=";">-->
<!--        update cabinet_cfg  set-->
<!--        x_coordinate = #{item.xCoordinate},-->
<!--        y_coordinate = #{item.yCoordinate}-->
<!--        where cabinet_id = #{item.id}-->
<!--        </foreach>-->
<!--    </update>-->

    <update id="updateBatchByCabinetId">
        <!-- 使用 CASE WHEN 实现批量更新 -->
        UPDATE cabinet_cfg
        <set>
            x_coordinate = CASE
            <foreach collection="cabinetList" item="item" index="index" separator=" ">
                WHEN cabinet_id = #{item.id} THEN #{item.xCoordinate}
            </foreach>
            ELSE x_coordinate
            END,
            y_coordinate = CASE
            <foreach collection="cabinetList" item="item" index="index" separator=" ">
                WHEN cabinet_id = #{item.id} THEN #{item.yCoordinate}
            </foreach>
            ELSE y_coordinate
            END
        </set>
        WHERE cabinet_id IN
        <foreach collection="cabinetList" item="item" index="index" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.framework.common.mapper.AisleIndexMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->
    <select id="selectAisleIndexByCfgList">
        select ai.aisle_name,ai.id,ai.aisle_length,ai.pdu_bar,ac.ele_alarm_day,ac.ele_alarm_month
        ,ac.ele_limit_day,ac.ele_limit_month,ai.direction,ai.x_coordinate
        ,ai.y_coordinate,ac.power_capacity
        from
        aisle_index ai left join aisle_cfg ac on ai.id = ac.aisle_id where ai.room_id =#{roomId} and ai.is_delete = '0'
    </select>
    <select id="selectRoomAisleList" resultType="cn.iocoder.yudao.framework.common.dto.room.AisleDataDTO">
        SELECT
        ai.id as id,
        ai.room_id as roomId,
        ai.aisle_name as aisleName,
        ai.aisle_length as length,
        ai.x_coordinate as xCoordinate,
        ai.y_coordinate as yCoordinate,
        ai.pdu_bar as pduBar,
        ai.direction as direction,
        ac.aisle_type as type,
        ac.power_capacity as powerCapacity,
        ac.ele_alarm_day as eleAlarmDay,
        ac.ele_alarm_month as eleAlarmMonth,
        ac.ele_limit_day as eleLimitDay,
        ac.ele_limit_month as eleLimitMonth
        FROM
        aisle_index ai
        LEFT JOIN aisle_cfg ac ON ai.id = ac.aisle_id
        WHERE
        ai.room_id = #{id} and ai.is_delete = 0
    </select>
    <select id="findAreaById" resultType="java.lang.Integer">
        select count(id) from aisle_index where is_delete = 0 and room_id =3391 and
        (y_coordinate+1 >#{yLength} and direction ='x') or
        ( direction ='y' and x_coordinate+1 > #{xLength} )
    </select>

    <select id="findAddAisleVerifyx" resultType="java.lang.Integer">
        select count(id)
        from aisle_index
        <where>
            is_delete = 0
            and room_id = #{vo.roomId}
            <if test="vo.id != null">
                and id != #{vo.id}
            </if>
            <if test="vo.direction !=null ">
                and (((#{vo.xCoordinate}+#{vo.aisleLength})>x_coordinate+aisle_length - 1
                and ((y_coordinate BETWEEN #{vo.yCoordinate}  and #{vo.yCoordinate}+1)
                or (y_coordinate+1 BETWEEN #{vo.yCoordinate}  and #{vo.yCoordinate}+1))
                AND direction = 'x' )
                or
                (direction = 'y'
                and  ((x_coordinate+1 BETWEEN #{vo.xCoordinate} AND #{vo.xCoordinate}+#{vo.aisleLength})
                or (x_coordinate BETWEEN #{vo.xCoordinate} AND #{vo.xCoordinate}+#{vo.aisleLength}))
                and ((#{vo.yCoordinate} BETWEEN y_coordinate and  y_coordinate+aisle_length-1)
                or  (#{vo.yCoordinate}+1 BETWEEN y_coordinate and  y_coordinate+aisle_length-1))))
            </if>
        </where>
    </select>
    <!--                AND( (( 8+2 )< y_coordinate + aisle_length - 1
                AND   (x_coordinate+1 BETWEEN 5 AND 6)
                AND direction = 'y' )

                or (direction = 'x' and  ((y_coordinate+1 BETWEEN 8 AND 10)
                or (y_coordinate BETWEEN 8 AND 10))
                and ((5 BETWEEN x_coordinate and  x_coordinate+aisle_length-1)
                or  (6 BETWEEN x_coordinate and  x_coordinate+aisle_length-1))))-->
    <select id="findAddAisleVerifyy" resultType="java.lang.Integer">
        select count(id)
        from aisle_index
        <where>
            is_delete = 0
            and room_id = #{vo.roomId}
            <if test="vo.id != null">
                and id != #{vo.id}
            </if>
            <if test="vo.direction !=null ">
                and (((#{vo.yCoordinate}+#{vo.aisleLength})>y_coordinate+aisle_length - 1
                and ((x_coordinate BETWEEN #{vo.xCoordinate}  and #{vo.xCoordinate}+1)
                or (x_coordinate+1 BETWEEN #{vo.xCoordinate}  and #{vo.xCoordinate}+1))
                AND direction = 'y' )
                or
                (direction = 'x'
                and  ((y_coordinate+1 BETWEEN #{vo.yCoordinate} AND #{vo.yCoordinate}+#{vo.aisleLength})
                or (y_coordinate BETWEEN #{vo.yCoordinate} AND #{vo.yCoordinate}+#{vo.aisleLength}))
                and ((#{vo.xCoordinate} BETWEEN x_coordinate and  x_coordinate+aisle_length-1)
                or  (#{vo.xCoordinate}+1 BETWEEN x_coordinate and  x_coordinate+aisle_length-1))))
            </if>
        </where>
    </select>
    <select id="selectByBusKey" resultType="cn.iocoder.yudao.framework.common.entity.mysql.aisle.AisleIndex">
        SELECT
        *
        FROM
        `aisle_bar` ab
        LEFT JOIN aisle_index ai ON ab.aisle_id = ai.id
        <where>
            ab.bus_key = #{busKey}
        </where>
    </select>
    <update id="roomAisleDeleteById">
        update aisle_index ai set ai.is_delete = 1 where ai.id = #{aisleId}
    </update>

</mapper>